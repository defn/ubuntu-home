#!/usr/bin/env bash

shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
source "$shome/script/profile"

function container {
  export AWS_DEFAULT_REGION="$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')"
  runmany docker pull $(aws ecr describe-repositories | jq -r --arg repo block '.repositories | map(select(.repositoryName == $repo))[].repositoryUri'):'$1'  -- base ubuntu "$@"
  make reset-docker-ubuntu
  script/configure
  make clean
  make prune

  sync
}

function main {
  set -exfu

  local loader='env DEBIAN_FRONTEND=noninteractive'

  if ! "$@" test -d .git; then
    "$@" -A ssh -o StrictHostKeyChecking=no git@github.com true 2>/dev/null || true
  fi

  local nm_branch="$(cd "$shome" && git rev-parse --abbrev-ref HEAD)"
  local nm_branch="$(git rev-parse --abbrev-ref HEAD)"
  local nm_remote="$(git rev-parse --abbrev-ref "${nm_branch}@{upstream}")"
  nm_remote="${nm_remote%%/*}"
  local url_remote="$(git config --get remote.${nm_remote}.url)"

  if ! "$@" test -d .git; then
    (cd "$_ubuntu_home" && tar cfz - .git) | "$@" tar xvfz -
    "$@" git reset --hard
    "$@" rsync -ia .gitconfig.template .gitconfig
    "$@" sudo $loader apt-get install -y awscli
    "$@" git submodule update --init
    "$@" work/base/script/bootstrap
    "$@" work/jq/script/bootstrap
    "$@" work/block/script/cibuild
    "$@" bin/home make cache

    "$@" git remote add "${nm_remote}" "${url_remote}" 2>/dev/null || true
    "$@" git remote set-url "${nm_remote}" "${url_remote}"
    "$@" -A git fetch "${nm_remote}"
    "$@" -A git branch -D "${nm_remote}/$nm_branch" || true
    "$@" -A git branch --set-upstream-to "${nm_remote}/$nm_branch"
    "$@" git reset --hard "${nm_remote}/${nm_branch}"
    "$@" -A git checkout "${nm_branch}" 
  fi

  "$@" bin/home make cache

  "$@" sudo dpkg --configure -a
  "$@" sudo apt-get update
  "$@" sudo $loader apt-get install -y make python build-essential aptitude
  "$@" sudo $loader aptitude hold grub-legacy-ec2 docker-ce lxd
  "$@" sudo $loader apt-get upgrade -y

  "$@" chmod 700 .gnupg
  "$@" chmod 600 .ssh/config

  "$@" bin/home block sync
  "$@" bin/home make cache
  "$@" bin/home block bootstrap

  "$@" sync
}

set -exfu
umask 0022
case "${1:-}" in
  container)
    shift
    container "$@"
    ;;
  *)
    main "$@"
    ;;
esac
